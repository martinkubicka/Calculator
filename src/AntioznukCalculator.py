## @file ui.py
# @date 26.04.2022
# @author Martin Kubicka (xkubic45)
# @author Dominik Petrik (xpetri25)
# @author Matej Macek (xmacek27)
# @brief code for user interface

# -*- coding: utf-8 -*-
# Form implementation generated from reading ui file 'calculator.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from cProfile import label
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import *
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *
import uiFunctions as fun

class Ui_MainWindow(QMainWindow):
    ## @brief function detects keyboard input by user
    def keyPressEvent(self, event):
        if event.key() == Qt.Key_Return:
            fun.equals(self)
        if event.key() == Qt.Key_0:
            fun.addNumber(self,"0")
        if event.key() == Qt.Key_1:
            fun.addNumber(self,"1")
        if event.key() == Qt.Key_2:
            fun.addNumber(self,"2")
        if event.key() == Qt.Key_3:
            fun.addNumber(self,"3")
        if event.key() == Qt.Key_4:
            fun.addNumber(self,"4")
        if event.key() == Qt.Key_5:
            fun.addNumber(self,"5")
        if event.key() == Qt.Key_6:
            fun.addNumber(self,"6")
        if event.key() == Qt.Key_7:
            fun.addNumber(self,"7")
        if event.key() == Qt.Key_8:
            fun.addNumber(self,"8")
        if event.key() == Qt.Key_9:
            fun.addNumber(self,"9")
        if event.key() == Qt.Key_Plus:
            fun.addPlus(self)
        if event.key() == Qt.Key_Minus:
            fun.addMinus(self)
        if event.key() == Qt.Key_Asterisk:
            fun.addMultiply(self)
        if event.key() == Qt.Key_Slash:
            fun.addDivide(self)
        if event.key() == Qt.Key_P:
            fun.addPower(self)
        if event.key() == Qt.Key_R:
            fun.addRoot(self)
        if event.key() == Qt.Key_F:
            fun.addFibonacci(self)
        if event.key() == Qt.Key_D:
            fun.addFactorial(self)
        if event.key() == Qt.Key_Period:
            fun.addDot(self)
        if event.key() == Qt.Key_C:
            fun.allClear(self)
        if event.key() == Qt.Key_Delete:
            fun.delete(self)
        if event.key() == Qt.Key_M:
            fun.openUserManual(self)
        
    ## @brief function setting opacity of main window
    def paintEvent(self, event=None):
        painter = QPainter(self)
        brush = QBrush(QColor(0,0,0))
        painter.setOpacity(0.75)
        painter.setBrush(brush)
        painter.drawRect(self.rect())
    
    ## @brief creating buttons etc..
    def setupUi(self, MainWindow):
        ##defined styles of buttons
        styleGreen40 = "QPushButton:hover{background-color: rgb(8, 114, 79);}QPushButton{background-color: rgb(18, 134, 99);font: 40pt Arial;color: rgb(255, 255, 255);border-radius: 15px;border: none;selection-color: rgb(80, 49, 255);}"
        styleGreen30 = "QPushButton:hover{background-color: rgb(8, 114, 79);}QPushButton{background-color: rgb(18, 134, 99);font: 30pt Arial;color: rgb(255, 255, 255);border-radius: 15px;border: none;selection-color: rgb(80, 49, 255);}"
        styleGreen20 = "QPushButton:hover{background-color: rgb(8, 114, 79);}QPushButton{background-color: rgb(18, 134, 99);font: 20pt Arial;color: rgb(255, 255, 255);border-radius: 15px;border: none;selection-color: rgb(80, 49, 255);}"

        ##creating buttons
        self.setObjectName("MainWindow")
        self.setFixedSize(800, 650)
        self.setWindowTitle("Antioznuk Calculator")
        self.statusBar().setVisible(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.button_7 = QtWidgets.QPushButton("7", self.centralwidget)
        self.button_7.setGeometry(QtCore.QRect(40, 180, 100, 100))
        self.button_7.setStyleSheet(styleGreen40)

        self.button_8 = QtWidgets.QPushButton("8", self.centralwidget)
        self.button_8.setGeometry(QtCore.QRect(150, 180, 100, 100))
        self.button_8.setStyleSheet(styleGreen40)
        
        self.button_9 = QtWidgets.QPushButton("9", self.centralwidget)
        self.button_9.setGeometry(QtCore.QRect(260, 180, 100, 100))
        self.button_9.setStyleSheet(styleGreen40)

        self.button_plus = QtWidgets.QPushButton("+", self.centralwidget)
        self.button_plus.setGeometry(QtCore.QRect(440, 180, 100, 100))
        self.button_plus.setStyleSheet(styleGreen40)
        
        self.button_minus = QtWidgets.QPushButton("-", self.centralwidget)
        self.button_minus.setGeometry(QtCore.QRect(550, 180, 100, 100))
        self.button_minus.setStyleSheet(styleGreen40)

        self.button_delete = QtWidgets.QPushButton("DEL", self.centralwidget)
        self.button_delete.setGeometry(QtCore.QRect(660, 180, 100, 100))
        self.button_delete.setStyleSheet(styleGreen20)

        self.button_4 = QtWidgets.QPushButton("4", self.centralwidget)
        self.button_4.setGeometry(QtCore.QRect(40, 290, 100, 100))
        self.button_4.setStyleSheet(styleGreen40)

        self.button_5 = QtWidgets.QPushButton("5", self.centralwidget)
        self.button_5.setGeometry(QtCore.QRect(150, 290, 100, 100))
        self.button_5.setStyleSheet(styleGreen40)

        self.button_6 = QtWidgets.QPushButton("6", self.centralwidget)
        self.button_6.setGeometry(QtCore.QRect(260, 290, 100, 100))
        self.button_6.setStyleSheet(styleGreen40)

        self.button_1 = QtWidgets.QPushButton("1", self.centralwidget)
        self.button_1.setGeometry(QtCore.QRect(40, 400, 100, 100))
        self.button_1.setStyleSheet(styleGreen40)

        self.button_2 = QtWidgets.QPushButton("2", self.centralwidget)
        self.button_2.setGeometry(QtCore.QRect(150, 400, 100, 100))
        self.button_2.setStyleSheet(styleGreen40)

        self.button_3 = QtWidgets.QPushButton("3", self.centralwidget)
        self.button_3.setGeometry(QtCore.QRect(260, 400, 100, 100))
        self.button_3.setStyleSheet(styleGreen40)

        self.button_0 = QtWidgets.QPushButton("0", self.centralwidget)
        self.button_0.setGeometry(QtCore.QRect(40, 510, 100, 100))
        self.button_0.setStyleSheet(styleGreen40)

        self.button_equals = QtWidgets.QPushButton("=", self.centralwidget)
        self.button_equals.setGeometry(QtCore.QRect(150, 510, 210, 100))
        self.button_equals.setStyleSheet("QPushButton:hover{\n"
"background-color: rgb(41, 93, 171);\n"
"\n"
"}\n"
"QPushButton{\n"
"background-color: #3373D3;\n"
"font: 40pt \"Arial\";\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 15px;\n"
"border: \"none\";\n"
"selection-color: rgb(80, 49, 255);\n"
"}")
        self.button_divide = QtWidgets.QPushButton("÷", self.centralwidget)
        self.button_divide.setGeometry(QtCore.QRect(440, 290, 100, 100))
        self.button_divide.setStyleSheet(styleGreen40)

        self.button_guide = QtWidgets.QPushButton("?", self.centralwidget)
        self.button_guide.setGeometry(QtCore.QRect(660, 510, 100, 100))
        self.button_guide.setStyleSheet("QPushButton:hover{\n"
"background-color:rgb(103, 103, 103);\n"
"}\n"
"QPushButton{\n"
"background-color: #81938E;\n"
"font: 40pt \"Arial\";\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 15px;\n"
"border: \"none\";\n"
"selection-color: rgb(80, 49, 255);\n"
"}")
        self.button_multiply = QtWidgets.QPushButton("×", self.centralwidget)
        self.button_multiply.setGeometry(QtCore.QRect(550, 290, 100, 100))
        self.button_multiply.setStyleSheet(styleGreen40)

        self.button_fibonacci = QtWidgets.QPushButton("FIB", self.centralwidget)
        self.button_fibonacci.setGeometry(QtCore.QRect(660, 400, 100, 100))
        self.button_fibonacci.setStyleSheet(styleGreen20)

        self.button_root = QtWidgets.QPushButton("√", self.centralwidget)
        self.button_root.setGeometry(QtCore.QRect(440, 400, 100, 100))
        self.button_root.setStyleSheet(styleGreen30)

        self.button_power = QtWidgets.QPushButton("xⁿ", self.centralwidget)
        self.button_power.setGeometry(QtCore.QRect(550, 400, 100, 100))
        self.button_power.setStyleSheet(styleGreen30)

        self.button_clear = QtWidgets.QPushButton("AC", self.centralwidget)
        self.button_clear.setGeometry(QtCore.QRect(660, 290, 100, 100))
        self.button_clear.setStyleSheet(styleGreen20)

        self.button_dot = QtWidgets.QPushButton(".", self.centralwidget)
        self.button_dot.setGeometry(QtCore.QRect(440, 510, 100, 100))
        self.button_dot.setStyleSheet(styleGreen40)
        
        self.button_factorial = QtWidgets.QPushButton("n!", self.centralwidget)
        self.button_factorial.setGeometry(QtCore.QRect(550, 510, 100, 100))
        self.button_factorial.setStyleSheet(styleGreen30)

        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        self.scrollArea.setGeometry(QtCore.QRect(40, 40, 721, 101))
        self.scrollArea.setStyleSheet("border: \"none\";\n"
"border-radius: 10;\n"
"background-color: rgb(36, 36, 36);")
        self.scrollArea.setWidgetResizable(True)
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 721, 101))
        
        self.label = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label.setGeometry(QtCore.QRect(0, 0, 721, 101))
        self.label.setStyleSheet("background-color: rgb(36, 36, 36);\n"
                                 
        
"border-radius: 10;\n"
"color: rgb(255,255,255);\n"
"font: 50pt \"Arial\";\n"
"padding-left :15px;\n"
"padding-right :25px;")
        self.scrollArea.setWidget(self.label)
        
        self.errorLabel = QtWidgets.QLabel(self.centralwidget)
        self.errorLabel.setGeometry(QtCore.QRect(40, 110, 721, 101))
        self.errorLabel.setStyleSheet("color: rgb(223, 102, 103);\n"
"font: 12pt \"Arial\";\n")
        
        MainWindow.setCentralWidget(self.centralwidget)
        
        ## connecting buttons with functions
        self.button_7.clicked.connect(lambda:fun.addNumber(self,"7"))
        self.button_8.clicked.connect(lambda:fun.addNumber(self, "8"))
        self.button_9.clicked.connect(lambda:fun.addNumber(self, "9"))
        self.button_4.clicked.connect(lambda:fun.addNumber(self, "4"))
        self.button_5.clicked.connect(lambda:fun.addNumber(self, "5"))
        self.button_6.clicked.connect(lambda:fun.addNumber(self, "6"))
        self.button_1.clicked.connect(lambda:fun.addNumber(self, "1"))
        self.button_2.clicked.connect(lambda:fun.addNumber(self, "2"))
        self.button_3.clicked.connect(lambda:fun.addNumber(self, "3"))
        self.button_0.clicked.connect(lambda:fun.addNumber(self, "0"))
        self.button_delete.clicked.connect(lambda:fun.delete(self))
        self.button_clear.clicked.connect(lambda:fun.allClear(self))
        self.button_plus.clicked.connect(lambda:fun.addPlus(self))
        self.button_minus.clicked.connect(lambda:fun.addMinus(self))
        self.button_divide.clicked.connect(lambda:fun.addDivide(self))
        self.button_multiply.clicked.connect(lambda:fun.addMultiply(self))
        self.button_fibonacci.clicked.connect(lambda:fun.addFibonacci(self))
        self.button_root.clicked.connect(lambda:fun.addRoot(self))
        self.button_power.clicked.connect(lambda:fun.addPower(self))
        self.button_dot.clicked.connect(lambda:fun.addDot(self))
        self.button_factorial.clicked.connect(lambda:fun.addFactorial(self))
        self.button_guide.clicked.connect(lambda:fun.openUserManual(self))
        self.button_equals.clicked.connect(lambda:fun.equals(self))
        self.keyPressEvent
        
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    
    ui.setAttribute(Qt.WA_NoSystemBackground, True)
    ui.setAttribute(Qt.WA_TranslucentBackground, True)
    ui.setupUi(ui)

    ui.show()
    sys.exit(app.exec_())